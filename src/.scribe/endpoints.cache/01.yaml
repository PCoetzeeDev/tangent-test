## Autogenerated by Scribe. DO NOT MODIFY.

name: Posts
description: |-

  Endpoints to interact with posts
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/posts
    metadata:
      groupName: Posts
      groupDescription: |-

        Endpoints to interact with posts
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user:
        name: user
        description: ''
        required: true
        example: quas
        type: string
        custom: []
      category:
        name: category
        description: ''
        required: true
        example: aut
        type: string
        custom: []
    cleanBodyParameters:
      user: quas
      category: aut
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"The selected user is invalid. (and 1 more error)","errors":{"user":["The selected user is invalid."],"category":["The selected category is invalid."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '36'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/posts
    metadata:
      groupName: Posts
      groupDescription: |-

        Endpoints to interact with posts
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user:
        name: user
        description: ''
        required: true
        example: veritatis
        type: string
        custom: []
      category:
        name: category
        description: ''
        required: true
        example: molestiae
        type: string
        custom: []
      headline:
        name: headline
        description: ''
        required: true
        example: quis
        type: string
        custom: []
      content:
        name: content
        description: ''
        required: true
        example: repudiandae
        type: string
        custom: []
    cleanBodyParameters:
      user: veritatis
      category: molestiae
      headline: quis
      content: repudiandae
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"invalid user (and 1 more error)","errors":{"user":["invalid user"],"category":["invalid category"]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '35'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/posts/{code}'
    metadata:
      groupName: Posts
      groupDescription: |-

        Endpoints to interact with posts
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      code:
        name: code
        description: ''
        required: true
        example: corporis
        type: string
        custom: []
    cleanUrlParameters:
      code: corporis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"Invalid code for post","errors":{"code":["Invalid code for post"]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '34'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/posts/{code}'
    metadata:
      groupName: Posts
      groupDescription: |-

        Endpoints to interact with posts
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      code:
        name: code
        description: ''
        required: true
        example: labore
        type: string
        custom: []
    cleanUrlParameters:
      code: labore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user:
        name: user
        description: ''
        required: true
        example: et
        type: string
        custom: []
      category:
        name: category
        description: ''
        required: true
        example: velit
        type: string
        custom: []
      headline:
        name: headline
        description: ''
        required: true
        example: assumenda
        type: string
        custom: []
      content:
        name: content
        description: ''
        required: true
        example: saepe
        type: string
        custom: []
    cleanBodyParameters:
      user: et
      category: velit
      headline: assumenda
      content: saepe
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"Invalid code for post","errors":{"code":["Invalid code for post"]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '33'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/posts/{code}'
    metadata:
      groupName: Posts
      groupDescription: |-

        Endpoints to interact with posts
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      code:
        name: code
        description: ''
        required: true
        example: error
        type: string
        custom: []
    cleanUrlParameters:
      code: error
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"Invalid code for post","errors":{"code":["Invalid code for post"]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '32'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
