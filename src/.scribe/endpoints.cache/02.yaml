## Autogenerated by Scribe. DO NOT MODIFY.

name: Comments
description: |-

  Endpoints to interact with comments
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/comments
    metadata:
      groupName: Comments
      groupDescription: |-

        Endpoints to interact with comments
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user:
        name: user
        description: ''
        required: true
        example: accusantium
        type: string
        custom: []
      post:
        name: post
        description: ''
        required: true
        example: repudiandae
        type: string
        custom: []
    cleanBodyParameters:
      user: accusantium
      post: repudiandae
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"The selected user is invalid. (and 1 more error)","errors":{"user":["The selected user is invalid."],"post":["The selected post is invalid."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '53'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/comments
    metadata:
      groupName: Comments
      groupDescription: |-

        Endpoints to interact with comments
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user:
        name: user
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
      post:
        name: post
        description: ''
        required: true
        example: omnis
        type: string
        custom: []
      content:
        name: content
        description: ''
        required: true
        example: aut
        type: string
        custom: []
    cleanBodyParameters:
      user: voluptatem
      post: omnis
      content: aut
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"invalid user (and 1 more error)","errors":{"user":["invalid user"],"post":["invalid post"]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '52'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comments/{code}'
    metadata:
      groupName: Comments
      groupDescription: |-

        Endpoints to interact with comments
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      code:
        name: code
        description: ''
        required: true
        example: praesentium
        type: string
        custom: []
    cleanUrlParameters:
      code: praesentium
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"Invalid code for comment","errors":{"code":["Invalid code for comment"]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '51'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/comments/{code}'
    metadata:
      groupName: Comments
      groupDescription: |-

        Endpoints to interact with comments
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      code:
        name: code
        description: ''
        required: true
        example: id
        type: string
        custom: []
    cleanUrlParameters:
      code: id
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user:
        name: user
        description: ''
        required: true
        example: harum
        type: string
        custom: []
      post:
        name: post
        description: ''
        required: true
        example: rerum
        type: string
        custom: []
      content:
        name: content
        description: ''
        required: true
        example: ut
        type: string
        custom: []
    cleanBodyParameters:
      user: harum
      post: rerum
      content: ut
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"Invalid code for comment","errors":{"code":["Invalid code for comment"]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '50'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/comments/{code}'
    metadata:
      groupName: Comments
      groupDescription: |-

        Endpoints to interact with comments
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      code:
        name: code
        description: ''
        required: true
        example: quia
        type: string
        custom: []
    cleanUrlParameters:
      code: quia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"Invalid code for comment","errors":{"code":["Invalid code for comment"]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '49'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
